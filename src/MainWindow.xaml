<Window x:Class="MiniViewer3D.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:local="clr-namespace:MiniViewer3D"
        xmlns:me="clr-namespace:MiniEyes;assembly=MiniEyes"
        xmlns:wht="clr-namespace:MiniEyes.WpfHelperTools;assembly=MiniEyes.WpfHelperTools"
        mc:Ignorable="d"
        Title="MainWindow"
        Height="900"
        Width="1900"
        WindowState="Maximized">
    <Window.Resources>
        <local:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
    </Window.Resources>
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="30"
                                  CornerRadius="0"
                                  GlassFrameThickness="0"
                                  ResizeBorderThickness="3"
                                  NonClientFrameEdges="None" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="WindowState"
                         Value="Maximized">
                    <Setter Property="BorderThickness"
                            Value="7" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Style>

    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <DockPanel LastChildFill="False"
                       Background="{StaticResource CaptionColor}">
                <DockPanel.Resources>
                    <Style TargetType="{x:Type Button}"
                           BasedOn="{StaticResource CaptionButtonStyle}" />
                </DockPanel.Resources>

                <Button Content="r"
                        Click="OnCloseBtnClicked" />
                <Button Content="1"
                        Click="OnMaximizeBtnClicked" />
                <Button Content="0"
                        Click="OnMinimizeBtnClicked" />

                <Image Source="/Icons/icons8-3d-50.png"
                       Width="20"
                       Height="20"
                       Margin="5,0,0,0"
                       DockPanel.Dock="Left"
                       WindowChrome.IsHitTestVisibleInChrome="True"
                       MouseLeftButtonDown="OnLogoDoubleClicked" />

                <Label Content="MiniViewer3D"
                       VerticalContentAlignment="Center" />
            </DockPanel>

            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="21" />
                    <RowDefinition Height="33" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Menu Height="21"
                      Padding="3,0,0,0"
                      DataContext="{Binding CommandViewModel}"
                      Background="{StaticResource MenuColor}">
                    <Menu.Resources>
                        <Style TargetType="{x:Type MenuItem}">
                            <!--<Setter Property="BorderThickness"
                                    Value="0" />-->
                        </Style>
                    </Menu.Resources>
                    <MenuItem Header="File"
                              Height="21">
                        <MenuItem Header="New Scene"
                                  Command="{Binding NewCommand}" />
                        <MenuItem Header="New Tab"
                                  Command="{Binding NewTabCommand}" />
                        <Separator />
                        <MenuItem Header="Close Tab"
                                  Command="{Binding CloseTabCommand}" />
                        <Separator />
                        <MenuItem Header="Import File"
                                  Command="{Binding ImportCommand}" />
                        <MenuItem Header="Export File"
                                  Command="{Binding ExportCommand}" />
                        <Separator />
                        <MenuItem Header="Exit"
                                  Command="{Binding ExitCommand}" />
                    </MenuItem>

                    <MenuItem Header="View">
                        <MenuItem Header="Rendering Mode">
                            <i:Interaction.Behaviors>
                                <wht:MenuItemMutableCheckBehavior />
                            </i:Interaction.Behaviors>
                            <MenuItem Header="Wireframe"
                                      IsCheckable="True"
                                      IsChecked="{Binding DataContext.ActiveSceneModel.RenderMode, 
                                                          ElementName=_sceneContainer, 
                                                          Converter={StaticResource EnumToBooleanConverter},ConverterParameter={x:Static me:RenderMode.Wireframe}}" />
                            <MenuItem Header="Filled"
                                      IsCheckable="True"
                                      IsChecked="{Binding DataContext.ActiveSceneModel.RenderMode, 
                                                          ElementName=_sceneContainer, 
                                                          Converter={StaticResource EnumToBooleanConverter},ConverterParameter={x:Static me:RenderMode.Filled}}" />
                        </MenuItem>
                        <MenuItem Header="Projection Mode">
                            <i:Interaction.Behaviors>
                                <wht:MenuItemMutableCheckBehavior />
                            </i:Interaction.Behaviors>
                            <MenuItem Header="Orthogonal"
                                      IsCheckable="True"
                                      Command="{Binding SetProjectionModeCommand}"
                                      CommandParameter="{x:Static me:ProjectionMode.Orthogonal}" />
                            <MenuItem Header="Perspective"
                                      IsCheckable="True"
                                      IsChecked="True"
                                      Command="{Binding SetProjectionModeCommand}"
                                      CommandParameter="{x:Static me:ProjectionMode.Perspective}" />
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="Reset View"
                                  Command="{Binding ResetViewCommand}" />
                        <MenuItem Header="Fit"
                                  Command="{Binding FitCommand}" />
                        <Separator />
                        <MenuItem Header="Top View"
                                  Command="{Binding SetViewCommand}"
                                  CommandParameter="{x:Static me:ViewMode.Top}" />
                        <MenuItem Header="Bottom View"
                                  Command="{Binding SetViewCommand}"
                                  CommandParameter="{x:Static me:ViewMode.Bottom}" />
                        <MenuItem Header="Left View"
                                  Command="{Binding SetViewCommand}"
                                  CommandParameter="{x:Static me:ViewMode.Left}" />
                        <MenuItem Header="Right View"
                                  Command="{Binding SetViewCommand}"
                                  CommandParameter="{x:Static me:ViewMode.Right}" />
                        <MenuItem Header="Front View"
                                  Command="{Binding SetViewCommand}"
                                  CommandParameter="{x:Static me:ViewMode.Front}" />
                        <MenuItem Header="Behind View"
                                  Command="{Binding SetViewCommand}"
                                  CommandParameter="{x:Static me:ViewMode.Behind}" />
                    </MenuItem>

                    <MenuItem Header="Scene">
                        <MenuItem Header="Background Color" />
                        <MenuItem Header="Settings" />
                        <Separator />
                        <MenuItem Header="Show Origin"
                                  IsChecked="{Binding DataContext.ActiveSceneModel.IsOriginVisible, 
                                                      ElementName=_sceneContainer}"
                                  IsCheckable="True" />
                        <MenuItem Header="Show Grid"
                                  IsCheckable="True" />
                        <MenuItem Header="Show BoundingBox"
                                  IsCheckable="True" />
                        <MenuItem Header="Show BoundingSphere"
                                  IsCheckable="True" />
                    </MenuItem>

                    <MenuItem Header="Tool">
                        <MenuItem Header="ScreenShot"
                                  Command="{Binding ScreenShotCommand}" />
                        <MenuItem Header="Copy Clipboard"
                                  Command="{Binding CopyClipboardCommand}" />
                    </MenuItem>

                    <MenuItem Header="Help" />
                </Menu>

                <StackPanel Grid.Row="1"
                            DataContext="{Binding CommandViewModel}"
                            Background="{StaticResource BaseColor}"
                            Orientation="Horizontal"
                            Margin="3,0,0,0">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Width"
                                    Value="25" />
                            <Setter Property="Height"
                                    Value="25" />
                            <Setter Property="Background"
                                    Value="Transparent" />
                            <Setter Property="BorderThickness"
                                    Value="0" />
                            <Setter Property="Margin"
                                    Value="2,0,0,0" />
                        </Style>
                    </StackPanel.Resources>
                    <Button Command="{Binding NewCommand}">
                        <Image Source="/Icons/icons8-file-50.png" />
                    </Button>
                    <Button Command="{Binding ImportCommand}">
                        <Image Source="/Icons/icons8-opened-folder-50.png" />
                    </Button>
                    <Button Command="{Binding ExportCommand}">
                        <Image Source="/Icons/icons8-save-50.png" />
                    </Button>
                    <Button Padding="-1"
                            Command="{Binding ScreenShotCommand}">
                        <Image Source="/Icons/icons8-screenshot-30.png" />
                    </Button>
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />

                    <RadioButton Style="{StaticResource FlatRadioButtonStyle}"
                                 GroupName="RenderMode"
                                 IsChecked="{Binding DataContext.ActiveSceneModel.RenderMode, 
                                                          ElementName=_sceneContainer, 
                                                          Converter={StaticResource EnumToBooleanConverter},ConverterParameter={x:Static me:RenderMode.Wireframe}}">
                        <Image Source="/Icons/icons8-mesh-50.png" />
                    </RadioButton>
                    <RadioButton Style="{StaticResource FlatRadioButtonStyle}"
                                 GroupName="RenderMode"
                                 IsChecked="{Binding DataContext.ActiveSceneModel.RenderMode, 
                                                          ElementName=_sceneContainer, 
                                                          Converter={StaticResource EnumToBooleanConverter},ConverterParameter={x:Static me:RenderMode.Filled}}">
                        <Image Source="/Icons/icons8-sphere-50.png" />
                    </RadioButton>
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />

                    <RadioButton Padding="2"
                                 GroupName="Projection"
                                 Style="{StaticResource FlatRadioButtonStyle}"
                                 Command="{Binding SetProjectionModeCommand}"
                                 CommandParameter="{x:Static me:ProjectionMode.Orthogonal}">
                        <Image Source="/Icons/orthogonal.png" />
                    </RadioButton>
                    <RadioButton Padding="1,2,1,1"
                                 GroupName="Projection"
                                 IsChecked="True"
                                 Style="{StaticResource FlatRadioButtonStyle}"
                                 Command="{Binding SetProjectionModeCommand}"
                                 CommandParameter="{x:Static me:ProjectionMode.Perspective}">
                        <!--<Image Source="/Icons/perspective.png" />-->
                        <Path Stroke="#0b70a5"
                              Fill="#0b70a5"
                              Stretch="Fill">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135"
                                                 CenterX="12"
                                                 CenterY="12" />
                            </Path.RenderTransform>
                            <Path.Data>
                                <PathGeometry Figures="m256 0c-5.53 0-10.611 3.042-13.222 7.917l-210 392c-4.152 7.752-.77 17.406 7.313 20.871l210 90c3.773 1.617 8.044 1.617 11.817 0l210-90c8.083-3.464 11.466-13.118 7.313-20.871l-210-392c-2.61-4.875-7.691-7.917-13.221-7.917zm-15 307.109-161.564 69.242 161.564-301.586zm0 32.639v134.504l-156.921-67.252zm30 0 156.921 67.252-156.921 67.252zm0-32.639v-232.344l161.564 301.586z" />
                            </Path.Data>
                        </Path>
                    </RadioButton>
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />

                    <Button Command="{Binding ResetViewCommand}">
                        <Image Source="/Icons/icons8-home-48.png"/>
                    </Button>
                    <Button Command="{Binding FitCommand}">
                        <Image Source="/Icons/icons8-fit-to-page-60.png" />
                    </Button>
                    <Button Padding="3"
                            Command="{Binding SetViewCommand}"
                            CommandParameter="{x:Static me:ViewMode.Top}">
                        <Image Source="/Icons/topview.png" />
                    </Button>
                    <Button Padding="3"
                            Command="{Binding SetViewCommand}"
                            CommandParameter="{x:Static me:ViewMode.Bottom}">
                        <Image Source="/Icons/bottomview.png" />
                    </Button >
                    <Button Padding="3"
                            Command="{Binding SetViewCommand}"
                            CommandParameter="{x:Static me:ViewMode.Left}">
                        <Image Source="/Icons/leftview.png" />
                    </Button>
                    <Button Padding="3"
                            Command="{Binding SetViewCommand}"
                            CommandParameter="{x:Static me:ViewMode.Right}">
                        <Image Source="/Icons/rightview.png" />
                    </Button>
                    <Button Padding="3"
                            Command="{Binding SetViewCommand}"
                            CommandParameter="{x:Static me:ViewMode.Front}">
                        <Image Source="/Icons/frontview.png" />
                    </Button>
                    <Button Padding="3"
                            Command="{Binding SetViewCommand}"
                            CommandParameter="{x:Static me:ViewMode.Behind}">
                        <Image Source="/Icons/behindview.png" />
                    </Button>
                </StackPanel>

                <Grid Grid.Row="2"
                      Background="{StaticResource BaseColor}"
                      Margin="0,3,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="1" />
                        <ColumnDefinition Width="400" />
                    </Grid.ColumnDefinitions>
                    
                    <TabControl DataContext="{Binding SceneLayoutViewModel}"
                                ItemsSource="{Binding SceneModels}"
                                SelectedItem="{Binding ActiveSceneModel}"
                                x:Name="_sceneContainer"
                                Margin="1,0,0,1">
                        <TabControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name, TargetNullValue=Empty Scene}" />
                            </DataTemplate>
                        </TabControl.ItemTemplate>
                        <TabControl.ContentTemplate>
                            <DataTemplate>
                                <me:SceneControl Scene="{Binding Scene}" />
                            </DataTemplate>
                        </TabControl.ContentTemplate>
                    </TabControl>

                    <TabControl Grid.Column="2"                                
                                DataContext="{Binding SceneLayoutViewModel.ActiveTabLayoutViewModel}"
                                Background="{StaticResource BaseColor}"
                                Margin="0,0,1,1">
                        <TabControl.Resources>
                            <Style TargetType="{x:Type TabItem}">
                                <Setter Property="Background"
                                        Value="{StaticResource BaseColor}" />
                            </Style>                               
                        </TabControl.Resources>
                        <TabItem Header="Scene">
                            <local:SceneTabView Margin="3"
                                                DataContext="{Binding SceneTabViewModel}" />
                        </TabItem>
                        <TabItem Header="Nodes"
                                 DataContext="{Binding NodeTreeTabViewModel}">
                            <local:NodeTabView Margin="-2" />
                        </TabItem>
                        <TabItem Header="Materials"
                                 DataContext="{Binding MaterialTabViewModel}">
                            <local:MaterialTabView />
                        </TabItem>
                        <TabItem Header="Camera" />
                        <TabItem Header="Lights"
                                 DataContext="{Binding LightsTabViewModel}">
                            <local:LightTabView />
                        </TabItem>
                    </TabControl>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
